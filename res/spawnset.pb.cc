// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: spawnset.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "spawnset.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ew {
namespace spawner {
class SpawnEntry_PreSegmentDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SpawnEntry_PreSegment> {
} _SpawnEntry_PreSegment_default_instance_;
class SpawnEntry_PostSegmentDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SpawnEntry_PostSegment> {
} _SpawnEntry_PostSegment_default_instance_;
class SpawnEntryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SpawnEntry> {
} _SpawnEntry_default_instance_;
class SpawnTableDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SpawnTable> {
} _SpawnTable_default_instance_;

namespace protobuf_spawnset_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[5];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEntry_PreSegment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEntry_PreSegment, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEntry_PreSegment, intersectionsize_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEntry_PostSegment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEntry_PostSegment, presidesupports_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEntry_PostSegment, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEntry_PostSegment, overlapsize_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEntry, postsidecounterparts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEntry, presideneighbors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnEntry, canspawn_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnTable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpawnTable, entries_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(SpawnEntry_PreSegment)},
  { 6, -1, sizeof(SpawnEntry_PostSegment)},
  { 13, -1, sizeof(SpawnEntry)},
  { 20, -1, sizeof(SpawnTable)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_SpawnEntry_PreSegment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SpawnEntry_PostSegment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SpawnEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SpawnTable_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "spawnset.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
  const ::google::protobuf::Descriptor* SpawnTable_EntriesEntry_descriptor = protobuf_spawnset_2eproto::file_level_metadata[3].descriptor;
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        SpawnTable_EntriesEntry_descriptor,
        ::google::protobuf::internal::MapEntry<
            ::google::protobuf::uint32,
            ::ew::spawner::SpawnEntry,
            ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
            ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
            0>::CreateDefaultInstance(
                SpawnTable_EntriesEntry_descriptor));
}

}  // namespace

void TableStruct::Shutdown() {
  _SpawnEntry_PreSegment_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _SpawnEntry_PostSegment_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _SpawnEntry_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _SpawnTable_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _SpawnEntry_PreSegment_default_instance_.DefaultConstruct();
  _SpawnEntry_PostSegment_default_instance_.DefaultConstruct();
  _SpawnEntry_default_instance_.DefaultConstruct();
  _SpawnTable_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\016spawnset.proto\022\new.spawner\"\275\002\n\nSpawnEn"
      "try\022@\n\024postSideCounterparts\030\001 \003(\0132\".ew.s"
      "pawner.SpawnEntry.PostSegment\022;\n\020preSide"
      "Neighbors\030\002 \003(\0132!.ew.spawner.SpawnEntry."
      "PreSegment\022\020\n\010canSpawn\030\003 \001(\010\0322\n\nPreSegme"
      "nt\022\n\n\002id\030\001 \001(\r\022\030\n\020intersectionSize\030\002 \001(\r"
      "\032j\n\013PostSegment\022:\n\017preSideSupports\030\001 \003(\013"
      "2!.ew.spawner.SpawnEntry.PreSegment\022\n\n\002i"
      "d\030\002 \001(\r\022\023\n\013overlapSize\030\003 \001(\r\"\212\001\n\nSpawnTa"
      "ble\0224\n\007entries\030\001 \003(\0132#.ew.spawner.SpawnT"
      "able.EntriesEntry\032F\n\014EntriesEntry\022\013\n\003key"
      "\030\001 \001(\r\022%\n\005value\030\002 \001(\0132\026.ew.spawner.Spawn"
      "Entry:\0028\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 497);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "spawnset.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_spawnset_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SpawnEntry_PreSegment::kIdFieldNumber;
const int SpawnEntry_PreSegment::kIntersectionSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SpawnEntry_PreSegment::SpawnEntry_PreSegment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_spawnset_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ew.spawner.SpawnEntry.PreSegment)
}
SpawnEntry_PreSegment::SpawnEntry_PreSegment(const SpawnEntry_PreSegment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    reinterpret_cast<char*>(&intersectionsize_) -
    reinterpret_cast<char*>(&id_) + sizeof(intersectionsize_));
  // @@protoc_insertion_point(copy_constructor:ew.spawner.SpawnEntry.PreSegment)
}

void SpawnEntry_PreSegment::SharedCtor() {
  ::memset(&id_, 0, reinterpret_cast<char*>(&intersectionsize_) -
    reinterpret_cast<char*>(&id_) + sizeof(intersectionsize_));
  _cached_size_ = 0;
}

SpawnEntry_PreSegment::~SpawnEntry_PreSegment() {
  // @@protoc_insertion_point(destructor:ew.spawner.SpawnEntry.PreSegment)
  SharedDtor();
}

void SpawnEntry_PreSegment::SharedDtor() {
}

void SpawnEntry_PreSegment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SpawnEntry_PreSegment::descriptor() {
  protobuf_spawnset_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_spawnset_2eproto::file_level_metadata[0].descriptor;
}

const SpawnEntry_PreSegment& SpawnEntry_PreSegment::default_instance() {
  protobuf_spawnset_2eproto::InitDefaults();
  return *internal_default_instance();
}

SpawnEntry_PreSegment* SpawnEntry_PreSegment::New(::google::protobuf::Arena* arena) const {
  SpawnEntry_PreSegment* n = new SpawnEntry_PreSegment;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SpawnEntry_PreSegment::Clear() {
// @@protoc_insertion_point(message_clear_start:ew.spawner.SpawnEntry.PreSegment)
  ::memset(&id_, 0, reinterpret_cast<char*>(&intersectionsize_) -
    reinterpret_cast<char*>(&id_) + sizeof(intersectionsize_));
}

bool SpawnEntry_PreSegment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ew.spawner.SpawnEntry.PreSegment)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 intersectionSize = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &intersectionsize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ew.spawner.SpawnEntry.PreSegment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ew.spawner.SpawnEntry.PreSegment)
  return false;
#undef DO_
}

void SpawnEntry_PreSegment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ew.spawner.SpawnEntry.PreSegment)
  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // uint32 intersectionSize = 2;
  if (this->intersectionsize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->intersectionsize(), output);
  }

  // @@protoc_insertion_point(serialize_end:ew.spawner.SpawnEntry.PreSegment)
}

::google::protobuf::uint8* SpawnEntry_PreSegment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ew.spawner.SpawnEntry.PreSegment)
  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // uint32 intersectionSize = 2;
  if (this->intersectionsize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->intersectionsize(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ew.spawner.SpawnEntry.PreSegment)
  return target;
}

size_t SpawnEntry_PreSegment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ew.spawner.SpawnEntry.PreSegment)
  size_t total_size = 0;

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // uint32 intersectionSize = 2;
  if (this->intersectionsize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->intersectionsize());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SpawnEntry_PreSegment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ew.spawner.SpawnEntry.PreSegment)
  GOOGLE_DCHECK_NE(&from, this);
  const SpawnEntry_PreSegment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SpawnEntry_PreSegment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ew.spawner.SpawnEntry.PreSegment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ew.spawner.SpawnEntry.PreSegment)
    MergeFrom(*source);
  }
}

void SpawnEntry_PreSegment::MergeFrom(const SpawnEntry_PreSegment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ew.spawner.SpawnEntry.PreSegment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.intersectionsize() != 0) {
    set_intersectionsize(from.intersectionsize());
  }
}

void SpawnEntry_PreSegment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ew.spawner.SpawnEntry.PreSegment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpawnEntry_PreSegment::CopyFrom(const SpawnEntry_PreSegment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ew.spawner.SpawnEntry.PreSegment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpawnEntry_PreSegment::IsInitialized() const {
  return true;
}

void SpawnEntry_PreSegment::Swap(SpawnEntry_PreSegment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SpawnEntry_PreSegment::InternalSwap(SpawnEntry_PreSegment* other) {
  std::swap(id_, other->id_);
  std::swap(intersectionsize_, other->intersectionsize_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SpawnEntry_PreSegment::GetMetadata() const {
  protobuf_spawnset_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_spawnset_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SpawnEntry_PreSegment

// uint32 id = 1;
void SpawnEntry_PreSegment::clear_id() {
  id_ = 0u;
}
::google::protobuf::uint32 SpawnEntry_PreSegment::id() const {
  // @@protoc_insertion_point(field_get:ew.spawner.SpawnEntry.PreSegment.id)
  return id_;
}
void SpawnEntry_PreSegment::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:ew.spawner.SpawnEntry.PreSegment.id)
}

// uint32 intersectionSize = 2;
void SpawnEntry_PreSegment::clear_intersectionsize() {
  intersectionsize_ = 0u;
}
::google::protobuf::uint32 SpawnEntry_PreSegment::intersectionsize() const {
  // @@protoc_insertion_point(field_get:ew.spawner.SpawnEntry.PreSegment.intersectionSize)
  return intersectionsize_;
}
void SpawnEntry_PreSegment::set_intersectionsize(::google::protobuf::uint32 value) {
  
  intersectionsize_ = value;
  // @@protoc_insertion_point(field_set:ew.spawner.SpawnEntry.PreSegment.intersectionSize)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SpawnEntry_PostSegment::kPreSideSupportsFieldNumber;
const int SpawnEntry_PostSegment::kIdFieldNumber;
const int SpawnEntry_PostSegment::kOverlapSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SpawnEntry_PostSegment::SpawnEntry_PostSegment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_spawnset_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ew.spawner.SpawnEntry.PostSegment)
}
SpawnEntry_PostSegment::SpawnEntry_PostSegment(const SpawnEntry_PostSegment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      presidesupports_(from.presidesupports_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    reinterpret_cast<char*>(&overlapsize_) -
    reinterpret_cast<char*>(&id_) + sizeof(overlapsize_));
  // @@protoc_insertion_point(copy_constructor:ew.spawner.SpawnEntry.PostSegment)
}

void SpawnEntry_PostSegment::SharedCtor() {
  ::memset(&id_, 0, reinterpret_cast<char*>(&overlapsize_) -
    reinterpret_cast<char*>(&id_) + sizeof(overlapsize_));
  _cached_size_ = 0;
}

SpawnEntry_PostSegment::~SpawnEntry_PostSegment() {
  // @@protoc_insertion_point(destructor:ew.spawner.SpawnEntry.PostSegment)
  SharedDtor();
}

void SpawnEntry_PostSegment::SharedDtor() {
}

void SpawnEntry_PostSegment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SpawnEntry_PostSegment::descriptor() {
  protobuf_spawnset_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_spawnset_2eproto::file_level_metadata[1].descriptor;
}

const SpawnEntry_PostSegment& SpawnEntry_PostSegment::default_instance() {
  protobuf_spawnset_2eproto::InitDefaults();
  return *internal_default_instance();
}

SpawnEntry_PostSegment* SpawnEntry_PostSegment::New(::google::protobuf::Arena* arena) const {
  SpawnEntry_PostSegment* n = new SpawnEntry_PostSegment;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SpawnEntry_PostSegment::Clear() {
// @@protoc_insertion_point(message_clear_start:ew.spawner.SpawnEntry.PostSegment)
  presidesupports_.Clear();
  ::memset(&id_, 0, reinterpret_cast<char*>(&overlapsize_) -
    reinterpret_cast<char*>(&id_) + sizeof(overlapsize_));
}

bool SpawnEntry_PostSegment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ew.spawner.SpawnEntry.PostSegment)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ew.spawner.SpawnEntry.PreSegment preSideSupports = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_presidesupports()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // uint32 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 overlapSize = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &overlapsize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ew.spawner.SpawnEntry.PostSegment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ew.spawner.SpawnEntry.PostSegment)
  return false;
#undef DO_
}

void SpawnEntry_PostSegment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ew.spawner.SpawnEntry.PostSegment)
  // repeated .ew.spawner.SpawnEntry.PreSegment preSideSupports = 1;
  for (unsigned int i = 0, n = this->presidesupports_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->presidesupports(i), output);
  }

  // uint32 id = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->id(), output);
  }

  // uint32 overlapSize = 3;
  if (this->overlapsize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->overlapsize(), output);
  }

  // @@protoc_insertion_point(serialize_end:ew.spawner.SpawnEntry.PostSegment)
}

::google::protobuf::uint8* SpawnEntry_PostSegment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ew.spawner.SpawnEntry.PostSegment)
  // repeated .ew.spawner.SpawnEntry.PreSegment preSideSupports = 1;
  for (unsigned int i = 0, n = this->presidesupports_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->presidesupports(i), false, target);
  }

  // uint32 id = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->id(), target);
  }

  // uint32 overlapSize = 3;
  if (this->overlapsize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->overlapsize(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ew.spawner.SpawnEntry.PostSegment)
  return target;
}

size_t SpawnEntry_PostSegment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ew.spawner.SpawnEntry.PostSegment)
  size_t total_size = 0;

  // repeated .ew.spawner.SpawnEntry.PreSegment preSideSupports = 1;
  {
    unsigned int count = this->presidesupports_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->presidesupports(i));
    }
  }

  // uint32 id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // uint32 overlapSize = 3;
  if (this->overlapsize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->overlapsize());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SpawnEntry_PostSegment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ew.spawner.SpawnEntry.PostSegment)
  GOOGLE_DCHECK_NE(&from, this);
  const SpawnEntry_PostSegment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SpawnEntry_PostSegment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ew.spawner.SpawnEntry.PostSegment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ew.spawner.SpawnEntry.PostSegment)
    MergeFrom(*source);
  }
}

void SpawnEntry_PostSegment::MergeFrom(const SpawnEntry_PostSegment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ew.spawner.SpawnEntry.PostSegment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  presidesupports_.MergeFrom(from.presidesupports_);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.overlapsize() != 0) {
    set_overlapsize(from.overlapsize());
  }
}

void SpawnEntry_PostSegment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ew.spawner.SpawnEntry.PostSegment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpawnEntry_PostSegment::CopyFrom(const SpawnEntry_PostSegment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ew.spawner.SpawnEntry.PostSegment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpawnEntry_PostSegment::IsInitialized() const {
  return true;
}

void SpawnEntry_PostSegment::Swap(SpawnEntry_PostSegment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SpawnEntry_PostSegment::InternalSwap(SpawnEntry_PostSegment* other) {
  presidesupports_.UnsafeArenaSwap(&other->presidesupports_);
  std::swap(id_, other->id_);
  std::swap(overlapsize_, other->overlapsize_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SpawnEntry_PostSegment::GetMetadata() const {
  protobuf_spawnset_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_spawnset_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SpawnEntry_PostSegment

// repeated .ew.spawner.SpawnEntry.PreSegment preSideSupports = 1;
int SpawnEntry_PostSegment::presidesupports_size() const {
  return presidesupports_.size();
}
void SpawnEntry_PostSegment::clear_presidesupports() {
  presidesupports_.Clear();
}
const ::ew::spawner::SpawnEntry_PreSegment& SpawnEntry_PostSegment::presidesupports(int index) const {
  // @@protoc_insertion_point(field_get:ew.spawner.SpawnEntry.PostSegment.preSideSupports)
  return presidesupports_.Get(index);
}
::ew::spawner::SpawnEntry_PreSegment* SpawnEntry_PostSegment::mutable_presidesupports(int index) {
  // @@protoc_insertion_point(field_mutable:ew.spawner.SpawnEntry.PostSegment.preSideSupports)
  return presidesupports_.Mutable(index);
}
::ew::spawner::SpawnEntry_PreSegment* SpawnEntry_PostSegment::add_presidesupports() {
  // @@protoc_insertion_point(field_add:ew.spawner.SpawnEntry.PostSegment.preSideSupports)
  return presidesupports_.Add();
}
::google::protobuf::RepeatedPtrField< ::ew::spawner::SpawnEntry_PreSegment >*
SpawnEntry_PostSegment::mutable_presidesupports() {
  // @@protoc_insertion_point(field_mutable_list:ew.spawner.SpawnEntry.PostSegment.preSideSupports)
  return &presidesupports_;
}
const ::google::protobuf::RepeatedPtrField< ::ew::spawner::SpawnEntry_PreSegment >&
SpawnEntry_PostSegment::presidesupports() const {
  // @@protoc_insertion_point(field_list:ew.spawner.SpawnEntry.PostSegment.preSideSupports)
  return presidesupports_;
}

// uint32 id = 2;
void SpawnEntry_PostSegment::clear_id() {
  id_ = 0u;
}
::google::protobuf::uint32 SpawnEntry_PostSegment::id() const {
  // @@protoc_insertion_point(field_get:ew.spawner.SpawnEntry.PostSegment.id)
  return id_;
}
void SpawnEntry_PostSegment::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:ew.spawner.SpawnEntry.PostSegment.id)
}

// uint32 overlapSize = 3;
void SpawnEntry_PostSegment::clear_overlapsize() {
  overlapsize_ = 0u;
}
::google::protobuf::uint32 SpawnEntry_PostSegment::overlapsize() const {
  // @@protoc_insertion_point(field_get:ew.spawner.SpawnEntry.PostSegment.overlapSize)
  return overlapsize_;
}
void SpawnEntry_PostSegment::set_overlapsize(::google::protobuf::uint32 value) {
  
  overlapsize_ = value;
  // @@protoc_insertion_point(field_set:ew.spawner.SpawnEntry.PostSegment.overlapSize)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SpawnEntry::kPostSideCounterpartsFieldNumber;
const int SpawnEntry::kPreSideNeighborsFieldNumber;
const int SpawnEntry::kCanSpawnFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SpawnEntry::SpawnEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_spawnset_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ew.spawner.SpawnEntry)
}
SpawnEntry::SpawnEntry(const SpawnEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      postsidecounterparts_(from.postsidecounterparts_),
      presideneighbors_(from.presideneighbors_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  canspawn_ = from.canspawn_;
  // @@protoc_insertion_point(copy_constructor:ew.spawner.SpawnEntry)
}

void SpawnEntry::SharedCtor() {
  canspawn_ = false;
  _cached_size_ = 0;
}

SpawnEntry::~SpawnEntry() {
  // @@protoc_insertion_point(destructor:ew.spawner.SpawnEntry)
  SharedDtor();
}

void SpawnEntry::SharedDtor() {
}

void SpawnEntry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SpawnEntry::descriptor() {
  protobuf_spawnset_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_spawnset_2eproto::file_level_metadata[2].descriptor;
}

const SpawnEntry& SpawnEntry::default_instance() {
  protobuf_spawnset_2eproto::InitDefaults();
  return *internal_default_instance();
}

SpawnEntry* SpawnEntry::New(::google::protobuf::Arena* arena) const {
  SpawnEntry* n = new SpawnEntry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SpawnEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:ew.spawner.SpawnEntry)
  postsidecounterparts_.Clear();
  presideneighbors_.Clear();
  canspawn_ = false;
}

bool SpawnEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ew.spawner.SpawnEntry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ew.spawner.SpawnEntry.PostSegment postSideCounterparts = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_postsidecounterparts()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .ew.spawner.SpawnEntry.PreSegment preSideNeighbors = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_presideneighbors()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // bool canSpawn = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &canspawn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ew.spawner.SpawnEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ew.spawner.SpawnEntry)
  return false;
#undef DO_
}

void SpawnEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ew.spawner.SpawnEntry)
  // repeated .ew.spawner.SpawnEntry.PostSegment postSideCounterparts = 1;
  for (unsigned int i = 0, n = this->postsidecounterparts_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->postsidecounterparts(i), output);
  }

  // repeated .ew.spawner.SpawnEntry.PreSegment preSideNeighbors = 2;
  for (unsigned int i = 0, n = this->presideneighbors_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->presideneighbors(i), output);
  }

  // bool canSpawn = 3;
  if (this->canspawn() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->canspawn(), output);
  }

  // @@protoc_insertion_point(serialize_end:ew.spawner.SpawnEntry)
}

::google::protobuf::uint8* SpawnEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ew.spawner.SpawnEntry)
  // repeated .ew.spawner.SpawnEntry.PostSegment postSideCounterparts = 1;
  for (unsigned int i = 0, n = this->postsidecounterparts_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->postsidecounterparts(i), false, target);
  }

  // repeated .ew.spawner.SpawnEntry.PreSegment preSideNeighbors = 2;
  for (unsigned int i = 0, n = this->presideneighbors_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->presideneighbors(i), false, target);
  }

  // bool canSpawn = 3;
  if (this->canspawn() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->canspawn(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ew.spawner.SpawnEntry)
  return target;
}

size_t SpawnEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ew.spawner.SpawnEntry)
  size_t total_size = 0;

  // repeated .ew.spawner.SpawnEntry.PostSegment postSideCounterparts = 1;
  {
    unsigned int count = this->postsidecounterparts_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->postsidecounterparts(i));
    }
  }

  // repeated .ew.spawner.SpawnEntry.PreSegment preSideNeighbors = 2;
  {
    unsigned int count = this->presideneighbors_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->presideneighbors(i));
    }
  }

  // bool canSpawn = 3;
  if (this->canspawn() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SpawnEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ew.spawner.SpawnEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const SpawnEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SpawnEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ew.spawner.SpawnEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ew.spawner.SpawnEntry)
    MergeFrom(*source);
  }
}

void SpawnEntry::MergeFrom(const SpawnEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ew.spawner.SpawnEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  postsidecounterparts_.MergeFrom(from.postsidecounterparts_);
  presideneighbors_.MergeFrom(from.presideneighbors_);
  if (from.canspawn() != 0) {
    set_canspawn(from.canspawn());
  }
}

void SpawnEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ew.spawner.SpawnEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpawnEntry::CopyFrom(const SpawnEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ew.spawner.SpawnEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpawnEntry::IsInitialized() const {
  return true;
}

void SpawnEntry::Swap(SpawnEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SpawnEntry::InternalSwap(SpawnEntry* other) {
  postsidecounterparts_.UnsafeArenaSwap(&other->postsidecounterparts_);
  presideneighbors_.UnsafeArenaSwap(&other->presideneighbors_);
  std::swap(canspawn_, other->canspawn_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SpawnEntry::GetMetadata() const {
  protobuf_spawnset_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_spawnset_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SpawnEntry

// repeated .ew.spawner.SpawnEntry.PostSegment postSideCounterparts = 1;
int SpawnEntry::postsidecounterparts_size() const {
  return postsidecounterparts_.size();
}
void SpawnEntry::clear_postsidecounterparts() {
  postsidecounterparts_.Clear();
}
const ::ew::spawner::SpawnEntry_PostSegment& SpawnEntry::postsidecounterparts(int index) const {
  // @@protoc_insertion_point(field_get:ew.spawner.SpawnEntry.postSideCounterparts)
  return postsidecounterparts_.Get(index);
}
::ew::spawner::SpawnEntry_PostSegment* SpawnEntry::mutable_postsidecounterparts(int index) {
  // @@protoc_insertion_point(field_mutable:ew.spawner.SpawnEntry.postSideCounterparts)
  return postsidecounterparts_.Mutable(index);
}
::ew::spawner::SpawnEntry_PostSegment* SpawnEntry::add_postsidecounterparts() {
  // @@protoc_insertion_point(field_add:ew.spawner.SpawnEntry.postSideCounterparts)
  return postsidecounterparts_.Add();
}
::google::protobuf::RepeatedPtrField< ::ew::spawner::SpawnEntry_PostSegment >*
SpawnEntry::mutable_postsidecounterparts() {
  // @@protoc_insertion_point(field_mutable_list:ew.spawner.SpawnEntry.postSideCounterparts)
  return &postsidecounterparts_;
}
const ::google::protobuf::RepeatedPtrField< ::ew::spawner::SpawnEntry_PostSegment >&
SpawnEntry::postsidecounterparts() const {
  // @@protoc_insertion_point(field_list:ew.spawner.SpawnEntry.postSideCounterparts)
  return postsidecounterparts_;
}

// repeated .ew.spawner.SpawnEntry.PreSegment preSideNeighbors = 2;
int SpawnEntry::presideneighbors_size() const {
  return presideneighbors_.size();
}
void SpawnEntry::clear_presideneighbors() {
  presideneighbors_.Clear();
}
const ::ew::spawner::SpawnEntry_PreSegment& SpawnEntry::presideneighbors(int index) const {
  // @@protoc_insertion_point(field_get:ew.spawner.SpawnEntry.preSideNeighbors)
  return presideneighbors_.Get(index);
}
::ew::spawner::SpawnEntry_PreSegment* SpawnEntry::mutable_presideneighbors(int index) {
  // @@protoc_insertion_point(field_mutable:ew.spawner.SpawnEntry.preSideNeighbors)
  return presideneighbors_.Mutable(index);
}
::ew::spawner::SpawnEntry_PreSegment* SpawnEntry::add_presideneighbors() {
  // @@protoc_insertion_point(field_add:ew.spawner.SpawnEntry.preSideNeighbors)
  return presideneighbors_.Add();
}
::google::protobuf::RepeatedPtrField< ::ew::spawner::SpawnEntry_PreSegment >*
SpawnEntry::mutable_presideneighbors() {
  // @@protoc_insertion_point(field_mutable_list:ew.spawner.SpawnEntry.preSideNeighbors)
  return &presideneighbors_;
}
const ::google::protobuf::RepeatedPtrField< ::ew::spawner::SpawnEntry_PreSegment >&
SpawnEntry::presideneighbors() const {
  // @@protoc_insertion_point(field_list:ew.spawner.SpawnEntry.preSideNeighbors)
  return presideneighbors_;
}

// bool canSpawn = 3;
void SpawnEntry::clear_canspawn() {
  canspawn_ = false;
}
bool SpawnEntry::canspawn() const {
  // @@protoc_insertion_point(field_get:ew.spawner.SpawnEntry.canSpawn)
  return canspawn_;
}
void SpawnEntry::set_canspawn(bool value) {
  
  canspawn_ = value;
  // @@protoc_insertion_point(field_set:ew.spawner.SpawnEntry.canSpawn)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SpawnTable::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SpawnTable::SpawnTable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_spawnset_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ew.spawner.SpawnTable)
}
SpawnTable::SpawnTable(const SpawnTable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  const ::google::protobuf::Descriptor*& SpawnTable_EntriesEntry_descriptor = protobuf_spawnset_2eproto::file_level_metadata[3].descriptor;
  entries_.SetAssignDescriptorCallback(
      protobuf_spawnset_2eproto::protobuf_AssignDescriptorsOnce);
  entries_.SetEntryDescriptor(
      &SpawnTable_EntriesEntry_descriptor);
  entries_.MergeFrom(from.entries_);
  // @@protoc_insertion_point(copy_constructor:ew.spawner.SpawnTable)
}

void SpawnTable::SharedCtor() {
  const ::google::protobuf::Descriptor*& SpawnTable_EntriesEntry_descriptor = protobuf_spawnset_2eproto::file_level_metadata[3].descriptor;
  entries_.SetAssignDescriptorCallback(
      protobuf_spawnset_2eproto::protobuf_AssignDescriptorsOnce);
  entries_.SetEntryDescriptor(
      &SpawnTable_EntriesEntry_descriptor);
  _cached_size_ = 0;
}

SpawnTable::~SpawnTable() {
  // @@protoc_insertion_point(destructor:ew.spawner.SpawnTable)
  SharedDtor();
}

void SpawnTable::SharedDtor() {
}

void SpawnTable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SpawnTable::descriptor() {
  protobuf_spawnset_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_spawnset_2eproto::file_level_metadata[4].descriptor;
}

const SpawnTable& SpawnTable::default_instance() {
  protobuf_spawnset_2eproto::InitDefaults();
  return *internal_default_instance();
}

SpawnTable* SpawnTable::New(::google::protobuf::Arena* arena) const {
  SpawnTable* n = new SpawnTable;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SpawnTable::Clear() {
// @@protoc_insertion_point(message_clear_start:ew.spawner.SpawnTable)
  entries_.Clear();
}

bool SpawnTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ew.spawner.SpawnTable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<uint32, .ew.spawner.SpawnEntry> entries = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(input->IncrementRecursionDepth());
          SpawnTable_EntriesEntry::Parser< ::google::protobuf::internal::MapField<
              ::google::protobuf::uint32, ::ew::spawner::SpawnEntry,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::ew::spawner::SpawnEntry > > parser(&entries_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ew.spawner.SpawnTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ew.spawner.SpawnTable)
  return false;
#undef DO_
}

void SpawnTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ew.spawner.SpawnTable)
  // map<uint32, .ew.spawner.SpawnEntry> entries = 1;
  if (!this->entries().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::ew::spawner::SpawnEntry >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->entries().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->entries().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::ew::spawner::SpawnEntry >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::ew::spawner::SpawnEntry >::const_iterator
          it = this->entries().begin();
          it != this->entries().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<SpawnTable_EntriesEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(entries_.NewEntryWrapper(
            items[i].second->first, items[i].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<SpawnTable_EntriesEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::ew::spawner::SpawnEntry >::const_iterator
          it = this->entries().begin();
          it != this->entries().end(); ++it) {
        entry.reset(entries_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  // @@protoc_insertion_point(serialize_end:ew.spawner.SpawnTable)
}

::google::protobuf::uint8* SpawnTable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ew.spawner.SpawnTable)
  // map<uint32, .ew.spawner.SpawnEntry> entries = 1;
  if (!this->entries().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::ew::spawner::SpawnEntry >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->entries().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->entries().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::ew::spawner::SpawnEntry >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::ew::spawner::SpawnEntry >::const_iterator
          it = this->entries().begin();
          it != this->entries().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<SpawnTable_EntriesEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(entries_.NewEntryWrapper(
            items[i].second->first, items[i].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<SpawnTable_EntriesEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::ew::spawner::SpawnEntry >::const_iterator
          it = this->entries().begin();
          it != this->entries().end(); ++it) {
        entry.reset(entries_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:ew.spawner.SpawnTable)
  return target;
}

size_t SpawnTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ew.spawner.SpawnTable)
  size_t total_size = 0;

  // map<uint32, .ew.spawner.SpawnEntry> entries = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->entries_size());
  {
    ::google::protobuf::scoped_ptr<SpawnTable_EntriesEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::ew::spawner::SpawnEntry >::const_iterator
        it = this->entries().begin();
        it != this->entries().end(); ++it) {
      entry.reset(entries_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SpawnTable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ew.spawner.SpawnTable)
  GOOGLE_DCHECK_NE(&from, this);
  const SpawnTable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SpawnTable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ew.spawner.SpawnTable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ew.spawner.SpawnTable)
    MergeFrom(*source);
  }
}

void SpawnTable::MergeFrom(const SpawnTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ew.spawner.SpawnTable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  entries_.MergeFrom(from.entries_);
}

void SpawnTable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ew.spawner.SpawnTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpawnTable::CopyFrom(const SpawnTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ew.spawner.SpawnTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpawnTable::IsInitialized() const {
  return true;
}

void SpawnTable::Swap(SpawnTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SpawnTable::InternalSwap(SpawnTable* other) {
  entries_.Swap(&other->entries_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SpawnTable::GetMetadata() const {
  protobuf_spawnset_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_spawnset_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SpawnTable

// map<uint32, .ew.spawner.SpawnEntry> entries = 1;
int SpawnTable::entries_size() const {
  return entries_.size();
}
void SpawnTable::clear_entries() {
  entries_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::ew::spawner::SpawnEntry >&
SpawnTable::entries() const {
  // @@protoc_insertion_point(field_map:ew.spawner.SpawnTable.entries)
  return entries_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::ew::spawner::SpawnEntry >*
SpawnTable::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_map:ew.spawner.SpawnTable.entries)
  return entries_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace spawner
}  // namespace ew

// @@protoc_insertion_point(global_scope)
